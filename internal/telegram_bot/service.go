package telegram_bot

import (
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"gitlab.com/avolkov/wood_post/store"
)

type Service struct {
	bot *tgbotapi.BotAPI
	db  *store.Store
}

func New(token string, db *store.Store) *Service {
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Panicf("Telegram bot init error: %v", err)
	}

	return &Service{
		bot: bot,
		db:  db,
	}
}

func (s *Service) Run() error {
	log.Printf("Telegram bot authorized as %s", s.bot.Self.UserName)

	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := s.bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		}

		chatID := update.Message.Chat.ID
		text := update.Message.Text

		switch text {
		case "/start":
			s.showMainMenu(chatID)
		case "üì• –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
			s.bot.Send(tgbotapi.NewMessage(chatID, "–û–∫–µ–π! –°–µ–π—á–∞—Å –¥–æ–±–∞–≤–∏–º –ø–æ–∫—É–ø–∫—É üí∞"))
			// —Ç—É—Ç –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫ –ø–æ—à–∞–≥–æ–≤–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
		case "üìä –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç":
			s.bot.Send(tgbotapi.NewMessage(chatID, "–°–æ–±–∏—Ä–∞—é –æ—Ç—á—ë—Ç üìà..."))
			// —Ç—É—Ç –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç—á—ë—Ç–∞
		default:
			s.bot.Send(tgbotapi.NewMessage(chatID, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª üôà. –ù–∞–∂–º–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫."))
		}
	}

	return nil
}

func (s *Service) showMainMenu(chatID int64) {
	menu := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üì• –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É"),
			tgbotapi.NewKeyboardButton("üìä –ü–æ–ª—É—á–∏—Ç—å –æ—Ç—á—ë—Ç"),
		),
	)

	msg := tgbotapi.NewMessage(chatID, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:")
	msg.ReplyMarkup = menu

	s.bot.Send(msg)
}
